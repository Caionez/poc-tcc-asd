// <auto-generated />
using System;
using InfoCadastraisWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InfoCadastraisWebApp.Migrations
{
    [DbContext(typeof(InfoCadastraisContext))]
    [Migration("20211016174832_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("EspecialidadePrestador", b =>
                {
                    b.Property<int>("EspecialidadesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PrestadoresId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EspecialidadesId", "PrestadoresId");

                    b.HasIndex("PrestadoresId");

                    b.ToTable("EspecialidadePrestador");
                });

            modelBuilder.Entity("InfoCadastraisWebApp.Models.Associado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Associados");
                });

            modelBuilder.Entity("InfoCadastraisWebApp.Models.Consulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ConveniadoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataConsulta")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EspecialidadeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PlanoAssociadoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PrestadorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ConveniadoId");

                    b.HasIndex("EspecialidadeId");

                    b.HasIndex("PlanoAssociadoId");

                    b.HasIndex("PrestadorId");

                    b.ToTable("Consulta");
                });

            modelBuilder.Entity("InfoCadastraisWebApp.Models.Conveniado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Endereco")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Conveniado");
                });

            modelBuilder.Entity("InfoCadastraisWebApp.Models.Especialidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("InfoCadastraisWebApp.Models.PlanoAssociado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AssociadoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataVigencia")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PlanoEmpresarial")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PlanoOdontologico")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoPlano")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AssociadoId")
                        .IsUnique();

                    b.ToTable("PlanoAssociado");
                });

            modelBuilder.Entity("InfoCadastraisWebApp.Models.Prestador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ConveniadoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ConveniadoId");

                    b.ToTable("Prestadores");
                });

            modelBuilder.Entity("EspecialidadePrestador", b =>
                {
                    b.HasOne("InfoCadastraisWebApp.Models.Especialidade", null)
                        .WithMany()
                        .HasForeignKey("EspecialidadesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InfoCadastraisWebApp.Models.Prestador", null)
                        .WithMany()
                        .HasForeignKey("PrestadoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InfoCadastraisWebApp.Models.Consulta", b =>
                {
                    b.HasOne("InfoCadastraisWebApp.Models.Conveniado", "Conveniado")
                        .WithMany()
                        .HasForeignKey("ConveniadoId");

                    b.HasOne("InfoCadastraisWebApp.Models.Especialidade", "Especialidade")
                        .WithMany()
                        .HasForeignKey("EspecialidadeId");

                    b.HasOne("InfoCadastraisWebApp.Models.PlanoAssociado", "PlanoAssociado")
                        .WithMany()
                        .HasForeignKey("PlanoAssociadoId");

                    b.HasOne("InfoCadastraisWebApp.Models.Prestador", "Prestador")
                        .WithMany()
                        .HasForeignKey("PrestadorId");

                    b.Navigation("Conveniado");

                    b.Navigation("Especialidade");

                    b.Navigation("PlanoAssociado");

                    b.Navigation("Prestador");
                });

            modelBuilder.Entity("InfoCadastraisWebApp.Models.PlanoAssociado", b =>
                {
                    b.HasOne("InfoCadastraisWebApp.Models.Associado", "Associado")
                        .WithOne("Plano")
                        .HasForeignKey("InfoCadastraisWebApp.Models.PlanoAssociado", "AssociadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Associado");
                });

            modelBuilder.Entity("InfoCadastraisWebApp.Models.Prestador", b =>
                {
                    b.HasOne("InfoCadastraisWebApp.Models.Conveniado", "Conveniado")
                        .WithMany("Prestadores")
                        .HasForeignKey("ConveniadoId");

                    b.Navigation("Conveniado");
                });

            modelBuilder.Entity("InfoCadastraisWebApp.Models.Associado", b =>
                {
                    b.Navigation("Plano");
                });

            modelBuilder.Entity("InfoCadastraisWebApp.Models.Conveniado", b =>
                {
                    b.Navigation("Prestadores");
                });
#pragma warning restore 612, 618
        }
    }
}
